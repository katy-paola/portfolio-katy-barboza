---
import "../global.css";
import Check from "../components/Check.astro";
import Close from "../components/Close.astro";
---

<section
  id="contact"
  class="relative flex flex-col p-4 lg:py-8 lg:px-56 scroll-mt-[52px] lg:scroll-mt-[108px] text-white gap-4 lg:gap-8 bg-bg bg-no-repeat bg-cover bg-bottom"
>
  <h2 class="text-base font-code font-semibold lg:text-2xl bg-white-blur p-2 lg:p-4">// Contacto</h2>
  <p
    id="check-message"
    class="relative flex gap-1 lg:gap-2 items-center text-sm lg:text-base bg-white-blur p-1 lg:p-2 scroll-p-[52px] lg:scroll-p-[108px] hide"
  >
    <Check />Tu mensaje ha sido enviado.<button
      id="close-button"
      class="absolute top-1/2 -translate-y-1/2 right-1 lg:right-2 hover:scale-105"
    >
      <Close />
    </button>
  </p>
  <a id="go-to-top" href="#contact" class="sr-only"></a>
  <form
    id="form-contact"
    action="https://formsubmit.co/katybarbozabaena@gmail.com"
    method="POST"
    class="relative z-10 flex flex-col gap-5 lg:gap-10 p-5 lg:p-10 bg-dark-blur backdrop-blur text-sm lg:text-base"
  >
    <fieldset class="flex flex-col gap-4">
      <section class="flex flex-col lg:flex-row gap-4">
        <input
          type="hidden"
          name="_subject"
          value="Has recibido un nuevo correo desde tu portfolio"
        />
        <input type="hidden" name="_next" value="http://localhost:4321/" />
        <input type="hidden" name="_captcha" value="false" />
        <label class="flex flex-col flex-1 gap-1">
          Nombre:
          <input
            type="text"
            name="name"
            placeholder="Nombre"
            class="w-full p-2 lg:p-4 text-xs lg:text-sm text-dark focus:outline-primary placeholder:text-neutral-500 font-medium"
            required
          />
        </label>
        <label class="flex flex-col flex-1 gap-1">
          Email:
          <input
            type="email"
            name="correo"
            placeholder="Email"
            class="w-full p-2 lg:p-4 text-xs lg:text-sm text-dark focus:outline-primary placeholder:text-neutral-500 font-medium"
            required
          />
        </label>
      </section>
      <label class="flex flex-col flex-1 gap-1">
        Asunto:
        <input
          type="text"
          name="subject"
          placeholder="Asunto"
          class="w-full p-2 lg:p-4 text-xs lg:text-sm text-dark focus:outline-primary placeholder:text-neutral-500 font-medium"
        />
      </label>
      <label class="flex flex-col gap-1">
        Mensaje:
        <textarea
          name="message"
          placeholder="Mensaje"
          class="message w-full p-2 lg:p-4 text-xs lg:text-sm min-h-16 lg:min-h-32 text-dark focus:outline-primary placeholder:text-neutral-500 font-medium"
        ></textarea>
      </label>
    </fieldset>
    <button
      id="submit"
      class="flex justify-center gap-2 self-center p-2 lg:py-2 lg:px-4 w-full lg:w-auto rounded border-solid leading-none font-medium border-white text-white border-2 hover:bg-primary hover:border-primary hover:text-dark"
    >
      Enviar
    </button>
  </form>
</section>
<script>
  const formContact: HTMLFormElement | null =
    document.querySelector("#form-contact");
  const checkMessage: HTMLElement | null =
    document.querySelector("#check-message");
  const closeButton: HTMLButtonElement | null =
    document.querySelector("#close-button");
  const goToTop: HTMLAnchorElement | null =
    document.querySelector("#go-to-top");
  const submit: HTMLButtonElement | null = document.querySelector("#submit");
  const loading: HTMLElement | null = document.querySelector("#loading");

  formContact?.addEventListener("submit", (e) => handleSubmit(e));
  async function handleSubmit(e: Event) {
    e.preventDefault();
    if (submit !== null) {
      submit.innerHTML = "Enviando...";
      submit.className =
        "flex gap-2 self-center px-4 py-2 rounded border-solid leading-none font-medium border-primary text-dark border-2 bg-primary";
    }
    loading?.classList.remove("hide");
    const formData = new FormData(formContact as HTMLFormElement);
    const response = await fetch(formContact?.action as string, {
      method: formContact?.method as string,
      body: formData,
      headers: {
        Accept: "application/json",
      },
    });
    if (response.ok) {
      formContact?.reset();
      if (submit !== null) {
        submit.innerHTML = "Enviar";
        submit.className =
          "flex gap-2 self-center px-4 py-2 rounded border-solid leading-none font-medium border-white text-white border-2 hover:bg-primary hover:border-primary hover:text-dark";
      }
      loading?.classList.add("hide");
      checkMessage?.classList.remove("hide");
      goToTop?.click();
      closeButton?.addEventListener("click", () => {
        checkMessage?.classList.add("hide");
      });
    }
  }
</script>
